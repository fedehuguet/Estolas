/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Aplicacion;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author federico
 */
public class Muestra extends javax.swing.JFrame {
    private int i;

    /**
     * Creates new form Muestra
     */
    public Muestra() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();
        BotonMostrar = new javax.swing.JToggleButton();
        txtmatricula = new javax.swing.JTextField();
        BotonCalcular = new javax.swing.JToggleButton();
        BotonEliminar = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        muestrapantalla = new javax.swing.JTextArea();
        regresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        label1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        label1.setText("Matricula");

        BotonMostrar.setText("Mostrar");
        BotonMostrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BotonMostrarMouseReleased(evt);
            }
        });

        BotonCalcular.setText("Calcular");
        BotonCalcular.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BotonCalcularMouseReleased(evt);
            }
        });

        BotonEliminar.setText("Eliminar");
        BotonEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BotonEliminarMouseReleased(evt);
            }
        });

        muestrapantalla.setEditable(false);
        muestrapantalla.setColumns(20);
        muestrapantalla.setRows(5);
        jScrollPane1.setViewportView(muestrapantalla);

        regresar.setText("Menu Principal");
        regresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                regresarMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(BotonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BotonCalcular)
                            .addGap(18, 18, 18)
                            .addComponent(BotonMostrar))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(240, 240, 240)))
                    .addComponent(txtmatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addComponent(regresar)))
                .addContainerGap(27, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(regresar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtmatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonMostrar)
                    .addComponent(BotonCalcular)
                    .addComponent(BotonEliminar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonMostrarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonMostrarMouseReleased
        // TODO add your handling code here:
        String matricula = txtmatricula.getText(); //Lee la matricula ingresada.
        try {
            int tamRegistro=220;
            int cantRegistros;
            int Posicion=0;
            int x = 0;
            boolean encontro=false;
            String mat = "";
            String alumnocompleto= "";
            String punto="";
            String completo="";
            String completo2="";
            RandomAccessFile ArchivoAlumno= new RandomAccessFile("DatosAlumno.dat", "rw"); 
                int tamArchivo=(int) ArchivoAlumno.length();
                cantRegistros= (tamArchivo)/(tamRegistro);
            while(Posicion<cantRegistros){ //Saldrá cuando no haya más registros.
                    ArchivoAlumno.seek(Posicion*tamRegistro);
                            for(int i=0; i<9;i++){ //Lee la matricula de cada registro en el archivo. (uno a la vez)
                               mat=mat + ArchivoAlumno.readChar();
                            }
                            
                    if(mat.equalsIgnoreCase(matricula)){ //Compara las matrículas.
                        for(int i=0; i<99;i++){
                            alumnocompleto= alumnocompleto + ArchivoAlumno.readChar(); //Si lo encuentra lee el archivo completo.
                            }
                        x=ArchivoAlumno.readInt();
                        punto=Integer.toString(x);
                         completo= alumnocompleto + punto;
                         completo2= completo2 + "\n" + completo;
                         completo="";
                         alumnocompleto="";
                         punto="";
                        encontro=true;
                    }
                   
                    
                x=0;
                mat="";
                Posicion++;
            } 
            if(encontro==false){
                muestrapantalla.setText("El alumno no está en el registro."); 
            }
           else {
                muestrapantalla.setText(completo2); //Imprime los datos.
                ArchivoAlumno.close();
            }
        } catch (IOException ex) {
            Logger.getLogger(Muestra.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_BotonMostrarMouseReleased

    private void BotonCalcularMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonCalcularMouseReleased
        // TODO add your handling code here:
        String matricula = txtmatricula.getText(); //Lee la matrícula.
        try{
            int tamRegistro= 220;
            int cantRegistros;
            int Posicion = 0;
            int puntos = 0;
            int puntostotales=0;
            boolean encontro=false;
            String mat = "";
            String puesto = "";
               RandomAccessFile ArchivoAlumno= new RandomAccessFile("DatosAlumno.dat", "rw");
                int tamArchivo=(int) ArchivoAlumno.length();
                cantRegistros= (tamArchivo/tamRegistro);
            while(Posicion<cantRegistros){ //La busca en el archivo.
                    ArchivoAlumno.seek(Posicion*tamRegistro);
                            for(int i=0; i<9;i++){
                                mat=mat + ArchivoAlumno.readChar();
                            }
                            
                                if(mat.equalsIgnoreCase(matricula)){
                                    ArchivoAlumno.seek(Posicion*tamRegistro+176);
                                    for(int j=0; j<20;j++){
                                        puesto=puesto + ArchivoAlumno.readChar();
                                    }
                                    //Asigna los puntos dependiendo del puesto.
                                    if(puesto.equalsIgnoreCase("Presidente          ")){
                                        puntos=50;
                                    }
                                    if(puesto.equalsIgnoreCase("Mesa                ")){
                                        puntos=20;
                                    }
                                    if(puesto.equalsIgnoreCase("Staff               ")){
                                        puntos=10;
                                    }
                                    ArchivoAlumno.seek(Posicion*tamRegistro+216);
                                        ArchivoAlumno.writeInt(puntos);
                                        puntostotales= puntostotales + puntos; //Acumula los puntos.
                                        encontro=true;

                                }
                                
            Posicion++;
            mat="";
            puesto="";
                } 
            if(encontro==false){
                muestrapantalla.setText("El alumno no está en el registro.");
            }
            else{
                if(puntostotales>200){
                    muestrapantalla.setText( "Tiene " + puntostotales + " puntos, por lo tanto merece estola.");
                }
                else muestrapantalla.setText( "Tiene " + puntostotales + " puntos, por lo tanto no merece estola y le faltan " + (200-puntostotales)+ " puntos.");
            }
            ArchivoAlumno.close();
        }
        catch(IOException e){
            muestrapantalla.setText("Error en archivo.");
            }
        
    }//GEN-LAST:event_BotonCalcularMouseReleased

    private void BotonEliminarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonEliminarMouseReleased
                                                    
        String matricula = txtmatricula.getText();
        try{
            int tamRegistro= 220;
            int cantRegistros;
            int Posicion = 0;
            int punt;
            boolean encontro=false;
            String mat = "";
            String completo = "";
            String vacio="";
               RandomAccessFile ArchivoAlumno= new RandomAccessFile("DatosAlumno.dat", "rw");
                int tamArchivo=(int) ArchivoAlumno.length();
                cantRegistros= (tamArchivo/tamRegistro);
            while((Posicion<cantRegistros)&&(encontro==false)){
                    ArchivoAlumno.seek(Posicion*tamRegistro);
                            for(int i=0; i<9;i++){
                                mat= mat + ArchivoAlumno.readChar();
                            }
                            //System.out.println(matricula);
                            //System.out.println(mat);
                                if(mat.equalsIgnoreCase(matricula)){
                                    if((Posicion+1)<cantRegistros){
                                        int n=1;
                                        while(n<cantRegistros-1){
                                            ArchivoAlumno.seek((Posicion+n)*tamRegistro);
                                           for(int j=0; j<108;j++){
                                                completo= completo + ArchivoAlumno.readChar();
                                            }
                                            punt= ArchivoAlumno.readInt();
                                            ArchivoAlumno.seek((Posicion+n-1)*tamRegistro);
                                            ArchivoAlumno.writeChars(completo);
                                            //ArchivoAlumno.seek((Posicion+n-1)*tamRegistro+216);
                                            ArchivoAlumno.writeInt(punt);
                                            completo="";
                                            n++;
                                            }
                                        ArchivoAlumno.seek((Posicion+n-1)*tamRegistro);
                                        for (int z=0; z<108; z++){
                                                vacio=vacio + " ";
                                            }
                                            punt=0;
                                            ArchivoAlumno.seek((Posicion+n-1)*tamRegistro);
                                            ArchivoAlumno.writeChars(vacio);
                                            ArchivoAlumno.writeInt(punt);
                                            }
                                    else {
                                        ArchivoAlumno.seek(Posicion*tamRegistro);
                                        for(int y=0; y<108;y++){
                                            completo=completo + " ";
                                        }
                                        punt=0;
                                        ArchivoAlumno.seek(Posicion*tamRegistro);
                                        ArchivoAlumno.writeChars(completo);
                                        ArchivoAlumno.writeInt(punt);
                                 }
                                    encontro=true;
                                }
                                else {
                                    mat="";
                                    Posicion++;
                                }
            } 
            if(encontro==false){
                muestrapantalla.setText("El alumno no está en el registro.");
            }
            else {
                muestrapantalla.setText("Si se borró");
                //System.out.println(Posicion);
            }
            ArchivoAlumno.close();
        }
        catch(IOException e){
            muestrapantalla.setText("Error en archivo.");
            }
        
     // TODO add your handling code here:
    }//GEN-LAST:event_BotonEliminarMouseReleased

    private void regresarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regresarMouseReleased
        // TODO add your handling code here:
        dispose();
        MenuPrincipal D=new MenuPrincipal();
        D.setVisible(true);
    }//GEN-LAST:event_regresarMouseReleased
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Muestra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Muestra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Muestra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Muestra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Muestra().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton BotonCalcular;
    private javax.swing.JToggleButton BotonEliminar;
    private javax.swing.JToggleButton BotonMostrar;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label label1;
    private javax.swing.JTextArea muestrapantalla;
    private javax.swing.JButton regresar;
    private javax.swing.JTextField txtmatricula;
    // End of variables declaration//GEN-END:variables
}
